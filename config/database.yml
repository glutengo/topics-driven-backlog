# Database configuration for Topics Driven Backlog
# The default is to use SQLite; if the Postgres configuration should be
# used set the environment variable TDB_ENVIRONMENT to docker. This is done
# in Dockerfile for the docker deployments.
# export set TDB_ENVIRONMENT=docker

<% if ENV['TDB_ENVIRONMENT'] == "docker" %>

development:
  adapter: postgresql
  encoding: unicode
  pool: 5
  timeout: 5000
  host: postgresql
  username: <%= ENV['POSTGRES_USER'] %>
  password: <%= ENV['POSTGRES_PASSWORD'] %>
  database: <%= ENV['POSTGRES_DB'] %>

test:
  adapter: postgresql
  encoding: unicode
  pool: 5
  timeout: 5000
  host: postgresql
  username: <%= ENV['POSTGRES_USER'] %>
  password: <%= ENV['POSTGRES_PASSWORD'] %>
  database: <%= ENV['POSTGRES_DB'] %>-test

production:
  adapter: postgresql
  encoding: unicode
  pool: 5
  timeout: 5000
  host: postgresql
  username: <%= ENV['POSTGRES_USER'] %>
  password: <%= ENV['POSTGRES_PASSWORD'] %>
  database: <%= ENV['POSTGRES_DB'] %>


<% else
  puts "ENV['TDB_ENVIRONMENT'] not set to \"docker\", using default: SQLITE"
%>

development:
  adapter: sqlite3
  database: db/development.sqlite3
  pool: 5
  timeout: 5000

test:
  adapter: sqlite3
  database: db/test.sqlite3
  pool: 5
  timeout: 5000

production:
  adapter: sqlite3
  database: db/production.sqlite3
  pool: 5
  timeout: 5000

<% end %>